<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.system.dao.CustomMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.system.model.Custom">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <result column="phone01" property="phone01"/>
        <result column="phone02" property="phone02"/>
        <result column="phone03" property="phone03"/>
        <result column="phone04" property="phone04"/>
        <result column="car01" property="car01"/>
        <result column="car02" property="car02"/>
        <result column="car03" property="car03"/>
        <result column="rem01" property="rem01"/>
        <result column="rem02" property="rem02"/>
        <result column="rem03" property="rem03"/>
        <result column="introduce" property="introduce"/>
        <result column="introduce_phone" property="introducePhone"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
         id, name, age, phone01, phone02, phone03, phone04,
          car01, car02, car03, rem01, rem02, rem03, introduce,
          introduce_phone, create_by, create_time
    </sql>

    <sql id="Base_Column_List_as">
     id, `name`, age, phone01, phone02, phone03, phone04, car01,
      car02, car03, rem01, rem02, rem03, introduce,
       introduce_phone as introducePhone,
       create_by as createBy, create_time as createTime,
      <![CDATA[  concat('?id=',id) as addFixRec ,   ]]> -- 传递id参数到修车记录
        <![CDATA[  concat('?id=',id)  as fixRecLook ]]>
    </sql>
    <select id="getPag" resultType="map">
        select
        <include refid="Base_Column_List_as"/>
        from han_custom where 1 = 1
        <if test=" condition != null and condition !='' ">
            and (
            `name` like #{condition} or phone01 like #{condition} or phone02 like #{condition}
            or phone02 like #{condition} or phone03 like #{condition} or phone04 like #{condition}
            )
        </if>
        <choose>
            <when test="orderByField != null and orderByField !=''">
                <choose>
                    <when test="isAsc == true">
                        order by ${orderByField} ASC
                    </when>
                    <otherwise>
                        order by ${orderByField} DESC
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                order by create_time DESC
            </otherwise>
        </choose>
    </select>
</mapper>
